{"version":3,"sources":["reportWebVitals.js","components/FirstPage.jsx","components/SecondPage.jsx","components/Header.jsx","components/api/api.js","redux/appReducer.js","redux/store.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FirstPage","currencies","useSelector","state","currencyReducer","useState","value","setValue","fromCurrency","setFromCurrency","toCurrency","setToCurrency","result","setResult","onClick","useCallback","axios","get","response","data","convertValue","Paper","style","height","backgroundColor","display","flexDirection","FormControl","fullWidth","TextField","margin","width","alignSelf","id","label","type","onChange","e","Number","target","InputLabelProps","shrink","Select","MenuItem","textAlign","InputProps","readOnly","Object","keys","map","currency","i","Button","variant","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","SecondPage","React","baseCurrency","setBaseCurrency","rate","setRate","results","catch","error","console","log","TableContainer","component","Table","sx","minWidth","TableHead","align","marginRight","TableBody","key","scope","StyledBreadcrumb","Chip","emphasize","Header","AppBar","position","Breadcrumbs","justifyContent","textDecoration","to","instance","baseURL","currencyAPI","FETCH_CURRENCIES","FETCH_CURRENCIES_SUCCESS","TOGGLE_IS_FETCHING","initialState","AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BZD","CAD","CDF","CHF","CLF","CLP","CNH","CNY","COP","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRU","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SRD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","isFetching","toggleIsFetching","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","AppContainer","connect","fetchCurrency","dispatch","a","props","Grid","container","item","xs","exact","path","render","MainApp","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.be4390e1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Button, FormControl, MenuItem, Paper, Select, TextField } from '@mui/material'\r\nimport axios from 'axios'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst FirstPage = () => {\r\n  const currencies = useSelector((state) => state.currencyReducer.currencies)\r\n\r\n  const [value, setValue] = useState(0)\r\n  const [fromCurrency, setFromCurrency] = useState('RUB')\r\n  const [toCurrency, setToCurrency] = useState('USD')\r\n  const [result, setResult] = useState(0)\r\n  let convertValue\r\n\r\n  const onClick = useCallback(() => {\r\n    axios\r\n      .get(\r\n        `https://api.fastforex.io/convert?from=${fromCurrency}&to=${toCurrency}&amount=${80}&api_key=4556f97ae5-f5e4423ba4-r220aq` //почему-то amount не может взять значение value\r\n      )\r\n      .then((response) => {\r\n        setResult(response.data.result[toCurrency])\r\n      })\r\n  }, [result, convertValue])\r\n  return (\r\n    <Paper style={{ height: '600px', backgroundColor: '#f6fdfc', display: 'flex', flexDirection: 'column' }}>\r\n      <FormControl fullWidth>\r\n        <TextField\r\n          style={{ margin: '30px 0 10px 0', width: '20%', alignSelf: 'center', backgroundColor: 'white' }}\r\n          id='outlined-number'\r\n          label='Number'\r\n          type='number'\r\n          value={value}\r\n          onChange={(e) => setValue(Number(e.target.value))}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <Select\r\n          style={{ margin: '15px 0', width: '20%', alignSelf: 'center', backgroundColor: 'white' }}\r\n          id='demo-simple-select'\r\n          value={fromCurrency}\r\n          onChange={(e) => setFromCurrency(e.target.value)}>\r\n          <MenuItem value={'RUB'}>RUB</MenuItem>\r\n          <MenuItem value={'USD'}>USD </MenuItem>\r\n        </Select>\r\n        <TextField\r\n          style={{ margin: '15px 0', width: '10%', alignSelf: 'center', backgroundColor: 'white', textAlign: 'center' }}\r\n          id='outlined-read-only-input'\r\n          value='in'\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n        <Select\r\n          style={{ margin: '15px 0', width: '20%', alignSelf: 'center', backgroundColor: 'white' }}\r\n          id='demo-simple-select'\r\n          value={toCurrency}\r\n          onChange={(e) => setToCurrency(e.target.value)}>\r\n          {Object.keys(currencies).map((currency, i) => {\r\n            return (\r\n              <MenuItem value={currency} key={i}>\r\n                {currency}\r\n              </MenuItem>\r\n            )\r\n          })}\r\n        </Select>\r\n        <Button\r\n          style={{ margin: '10px 0', width: '10%', alignSelf: 'center', backgroundColor: 'white' }}\r\n          variant='outlined'\r\n          onClick={onClick}>\r\n          Просмотр\r\n        </Button>\r\n        <TextField\r\n          style={{ margin: '15px 0', width: '20%', alignSelf: 'center', backgroundColor: 'white' }}\r\n          id='outlined-read-only-input'\r\n          value={result}\r\n          InputProps={{\r\n            readOnly: true,\r\n          }}\r\n        />\r\n      </FormControl>\r\n    </Paper>\r\n  )\r\n}\r\nexport default FirstPage\r\n","import { MenuItem, Paper, Select } from '@mui/material'\r\nimport * as React from 'react'\r\nimport { styled } from '@mui/material/styles'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}))\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}))\r\nconst SecondPage = () => {\r\n  const [baseCurrency, setBaseCurrency] = React.useState(['RUB'])\r\n  const [rate, setRate] = React.useState()\r\n  const currencies = useSelector((state) => state.currencyReducer.currencies)\r\n\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(`https://api.fastforex.io/fetch-all?from=${baseCurrency}&api_key=4556f97ae5-f5e4423ba4-r220aq`)\r\n      .then(({ data }) => {\r\n        setRate(data.results)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }, [])\r\n  console.log(rate)\r\n  // const array = []\r\n  // for (var key in currencies) {\r\n  //   array.push(Object(key) + ' : ' + Object(currencies[key]))\r\n  // }\r\n\r\n  // // for (var i in currencies) {\r\n  // //   array.push(i)\r\n  // //   array.push(currencies[i])\r\n  // // }\r\n  // console.log(array)\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align='center'>index</StyledTableCell>\r\n            <StyledTableCell align='center'>currency</StyledTableCell>\r\n            <StyledTableCell align='center'>name</StyledTableCell>\r\n            <StyledTableCell align='center'>\r\n              <Select\r\n                style={{ marginRight: '10px', alignSelf: 'center', backgroundColor: 'white' }}\r\n                id='demo-simple-select'\r\n                value={baseCurrency}\r\n                onChange={(e) => setBaseCurrency(e.target.value)}>\r\n                <MenuItem value={'RUB'}>RUB</MenuItem>\r\n                <MenuItem value={'USD'}>USD </MenuItem>\r\n              </Select>\r\n              from\r\n            </StyledTableCell>\r\n            <StyledTableCell align='center'>result</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.keys(currencies).map((key, i) => (\r\n            <StyledTableRow key={key}>\r\n              <StyledTableCell align='center' component='th' scope='row'>\r\n                {i}\r\n              </StyledTableCell>\r\n              <StyledTableCell align='center'>{key}</StyledTableCell>\r\n              <StyledTableCell align='center'>{currencies[key]}</StyledTableCell>\r\n              <StyledTableCell align='center'>{baseCurrency}</StyledTableCell>\r\n              <StyledTableCell align='center'>{key.result}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\nexport default SecondPage\r\n","import { AppBar, Breadcrumbs, Chip, MenuItem, Select } from '@mui/material'\r\nimport { emphasize, styled } from '@mui/system'\r\nimport { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst StyledBreadcrumb = styled(Chip)(({ theme }) => {\r\n  const backgroundColor = '#f6fdfc'\r\n  return {\r\n    backgroundColor,\r\n    '&:hover, &:focus': {\r\n      backgroundColor: emphasize(backgroundColor, 0.06),\r\n    },\r\n    '&:active': {\r\n      backgroundColor: emphasize(backgroundColor, 0.12),\r\n    },\r\n  }\r\n})\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar position='static' style={{ display: 'flex' }}>\r\n      <Breadcrumbs style={{ display: 'flex', justifyContent: 'center', margin: '17px 0' }} aria-label='breadcrumb'>\r\n        <NavLink style={{ textDecoration: 'none' }} to='/converter'>\r\n          <StyledBreadcrumb component='a' label='Converter' />\r\n        </NavLink>\r\n        <NavLink style={{ textDecoration: 'none' }} to='/current-currency'>\r\n          <StyledBreadcrumb component='a' label='Current currency' />\r\n        </NavLink>\r\n      </Breadcrumbs>\r\n    </AppBar>\r\n  )\r\n}\r\nexport default Header\r\n\r\n//activeClassName={s.active}\r\n","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: `https://free.currconv.com/api/v7/`,\r\n})\r\n\r\nexport const currencyAPI = {\r\n  getCurrencies() {\r\n    return instance.get(`https://api.fastforex.io/fetch-all?api_key=4556f97ae5-f5e4423ba4-r220aq`).then((response) => {\r\n      return response.data\r\n    })\r\n  },\r\n\r\n  getResult(fromCurrency, toCurrency, value) {\r\n    return instance\r\n      .get(\r\n        `https://api.fastforex.io/convert?from=${fromCurrency}&to=${toCurrency}&amount=${value}&api_key=4556f97ae5-f5e4423ba4-r220aq`\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data)\r\n      })\r\n  },\r\n}\r\n","import { currencyAPI } from '../components/api/api'\r\n\r\nconst FETCH_CURRENCIES = 'FETCH_CURRENCIES'\r\nconst FETCH_CURRENCIES_SUCCESS = 'FETCH_CURRENCIES_SUCCESS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\nlet initialState = {\r\n  currencies: {\r\n    AED: 'United Arab Emirates Dirham',\r\n    AFN: 'Afghan Afghani',\r\n    ALL: 'Albanian Lek',\r\n    AMD: 'Armenian Dram',\r\n    ANG: 'Dutch Guilders',\r\n    AOA: 'Angolan Kwanza',\r\n    ARS: 'Argentine Peso',\r\n    AUD: 'Australian Dollar',\r\n    AWG: 'Aruban Florin',\r\n    AZN: 'Azerbaijani Manat',\r\n    BAM: 'Bosnia-Herzegovina Convertible Mark',\r\n    BBD: 'Barbadian Dollar',\r\n    BDT: 'Bangladeshi Taka',\r\n    BGN: 'Bulgarian Lev',\r\n    BHD: 'Bahraini Dinar',\r\n    BIF: 'Burundian Franc',\r\n    BMD: 'Bermudian Dollar',\r\n    BND: 'Bruneian Dollar',\r\n    BOB: 'Bolivian Boliviano',\r\n    BRL: 'Brazilian Real',\r\n    BSD: 'Bahamian Dollar',\r\n    BTN: 'Bhutanese Ngultrum',\r\n    BWP: 'Botswanan Pula',\r\n    BZD: 'Belizean Dollar',\r\n    CAD: 'Canadian Dollar',\r\n    CDF: 'Congolese Franc',\r\n    CHF: 'Swiss Franc',\r\n    CLF: 'Chilean Unit of Account UF',\r\n    CLP: 'Chilean Peso',\r\n    CNH: 'Chinese Yuan Offshore',\r\n    CNY: 'Chinese Yuan',\r\n    COP: 'Colombian Peso',\r\n    CUP: 'Cuban Peso',\r\n    CVE: 'Cape Verdean Escudo',\r\n    CZK: 'Czech Republic Koruna',\r\n    DJF: 'Djiboutian Franc',\r\n    DKK: 'Danish Krone',\r\n    DOP: 'Dominican Peso',\r\n    DZD: 'Algerian Dinar',\r\n    EGP: 'Egyptian Pound',\r\n    ERN: 'Eritrean Nakfa',\r\n    ETB: 'Ethiopian Birr',\r\n    EUR: 'Euro',\r\n    FJD: 'Fijian Dollar',\r\n    FKP: 'Falkland Islands Pound',\r\n    GBP: 'British Pound Sterling',\r\n    GEL: 'Georgian Lari',\r\n    GHS: 'Ghanaian Cedi',\r\n    GIP: 'Gibraltar Pound',\r\n    GMD: 'Gambian Dalasi',\r\n    GNF: 'Guinean Franc',\r\n    GTQ: 'Guatemalan Quetzal',\r\n    GYD: 'Guyanaese Dollar',\r\n    HKD: 'Hong Kong Dollar',\r\n    HNL: 'Honduran Lempira',\r\n    HRK: 'Croatian Kuna',\r\n    HTG: 'Haitian Gourde',\r\n    HUF: 'Hungarian Forint',\r\n    IDR: 'Indonesian Rupiah',\r\n    ILS: 'Israeli New Sheqel',\r\n    INR: 'Indian Rupee',\r\n    IQD: 'Iraqi Dinar',\r\n    IRR: 'Iranian Rial',\r\n    ISK: 'Icelandic Krona',\r\n    JMD: 'Jamaican Dollar',\r\n    JOD: 'Jordanian Dinar',\r\n    JPY: 'Japanese Yen',\r\n    KES: 'Kenyan Shilling',\r\n    KGS: 'Kyrgystani Som',\r\n    KHR: 'Cambodian Riel',\r\n    KMF: 'Comorian Franc',\r\n    KPW: 'North Korean Won',\r\n    KRW: 'South Korean Won',\r\n    KWD: 'Kuwaiti Dinar',\r\n    KYD: 'Caymanian Dollar',\r\n    KZT: 'Kazakhstani Tenge',\r\n    LAK: 'Laotian Kip',\r\n    LBP: 'Lebanese Pound',\r\n    LKR: 'Sri Lankan Rupee',\r\n    LRD: 'Liberian Dollar',\r\n    LSL: 'Basotho Maloti',\r\n    LYD: 'Libyan Dinar',\r\n    MAD: 'Moroccan Dirham',\r\n    MDL: 'Moldovan Leu',\r\n    MGA: 'Malagasy Ariary',\r\n    MKD: 'Macedonian Denar',\r\n    MMK: 'Myanma Kyat',\r\n    MNT: 'Mongolian Tugrik',\r\n    MOP: 'Macanese Pataca',\r\n    MRU: 'Mauritanian Ouguiya (1973–2017)',\r\n    MUR: 'Mauritian Rupee',\r\n    MVR: 'Maldivian Rufiyaa',\r\n    MWK: 'Malawian Kwacha',\r\n    MXN: 'Mexican Peso',\r\n    MYR: 'Malaysian Ringgit',\r\n    MZN: 'Mozambican Metical',\r\n    NAD: 'Namibian Dollar',\r\n    NGN: 'Nigerian Naira',\r\n    NOK: 'Norwegian Krone',\r\n    NPR: 'Nepalese Rupee',\r\n    NZD: 'New Zealand Dollar',\r\n    OMR: 'Omani Rial',\r\n    PAB: 'Panamanian Balboa',\r\n    PEN: 'Peruvian Nuevo Sol',\r\n    PGK: 'Papua New Guinean Kina',\r\n    PHP: 'Philippine Peso',\r\n    PKR: 'Pakistani Rupee',\r\n    PLN: 'Polish Zloty',\r\n    PYG: 'Paraguayan Guarani',\r\n    QAR: 'Qatari Rial',\r\n    RON: 'Romanian Leu',\r\n    RSD: 'Serbian Dinar',\r\n    RUB: 'Russian Ruble',\r\n    RWF: 'Rwandan Franc',\r\n    SAR: 'Saudi Arabian Riyal',\r\n    SCR: 'Seychellois Rupee',\r\n    SDG: 'Sudanese Pound',\r\n    SEK: 'Swedish Krona',\r\n    SGD: 'Singapore Dollar',\r\n    SHP: 'Saint Helena Pound',\r\n    SLL: 'Sierra Leonean Leone',\r\n    SOS: 'Somali Shilling',\r\n    SRD: 'Surinamese Dollar',\r\n    SYP: 'Syrian Pound',\r\n    SZL: 'Swazi Emalangeni',\r\n    THB: 'Thai Baht',\r\n    TJS: 'Tajikistani Somoni',\r\n    TMT: 'Turkmenistani Manat',\r\n    TND: 'Tunisian Dinar',\r\n    TOP: \"Tongan Pa'anga\",\r\n    TRY: 'Turkish Lira',\r\n    TTD: 'Trinidad and Tobago Dollar',\r\n    TWD: 'Taiwan New Dollar',\r\n    TZS: 'Tanzanian Shilling',\r\n    UAH: 'Ukrainian Hryvnia',\r\n    UGX: 'Ugandan Shilling',\r\n    USD: 'United States Dollar',\r\n    UYU: 'Uruguayan Peso',\r\n    UZS: 'Uzbekistan Som',\r\n    VND: 'Vietnamese Dong',\r\n    VUV: 'Ni-Vanuatu Vatu',\r\n    WST: 'Samoan Tala',\r\n    XAF: 'CFA Franc BEAC',\r\n    XCD: 'East Caribbean Dollar',\r\n    XDR: 'Special Drawing Rights',\r\n    XOF: 'CFA Franc BCEAO',\r\n    XPF: 'CFP Franc',\r\n    YER: 'Yemeni Rial',\r\n    ZAR: 'South African Rand',\r\n    ZMW: 'Zambian Kwacha',\r\n  },\r\n  isFetching: true,\r\n}\r\n\r\nconst currencyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CURRENCIES: {\r\n      return {\r\n        ...state,\r\n        currencies: action.results,\r\n      }\r\n    }\r\n    case FETCH_CURRENCIES_SUCCESS:\r\n      return { value: state.value - 1 }\r\n\r\n    case TOGGLE_IS_FETCHING:\r\n      return { ...state, isFetching: action.isFetching }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n})\r\nexport const setCurency = (currencies) => ({ type: FETCH_CURRENCIES, currencies })\r\n\r\nexport const fetchCurrencySuccess = (currencies) => {\r\n  return {\r\n    type: FETCH_CURRENCIES_SUCCESS,\r\n    currencies,\r\n  }\r\n}\r\n\r\nexport const fetchCurrency = () => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n\r\n    let data = await currencyAPI.getCurrencies()\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setCurency(data))\r\n  }\r\n}\r\n\r\n// export const currenciesFetchData = () => async (dispatch) => {\r\n//   const currencies = await currencyAPI.getRate()\r\n//   dispatch(currenciesFetchDataSuccess(currencies))\r\n// }\r\n\r\nexport default currencyReducer\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport currencyReducer from './appReducer'\r\n\r\nlet rootReducer = combineReducers({\r\n  currencyReducer,\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import './App.css'\nimport { Grid, Paper } from '@mui/material'\nimport { Redirect, Route } from 'react-router'\nimport FirstPage from './components/FirstPage'\nimport SecondPage from './components/SecondPage'\nimport Header from './components/Header'\n// import { BrowserRouter as Router } from 'react-router-dom'\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport store from './redux/store'\nimport { connect, Provider, useSelector } from 'react-redux'\nimport React, { useEffect } from 'react'\nimport { fetchCurrency } from './redux/appReducer'\n\nconst App = (props) => {\n  // const dispatch = useDispatch()\n\n  // useEffect(() => {\n  //   props.getCurrency()\n  // }, [])\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Paper>\n          <Header />\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper color='#f6fdfc'>\n          <Route exact path='/'>\n            <Redirect to='/converter' />\n          </Route>\n          <Route path='/converter' render={() => <FirstPage />} />\n          <Route path='/current-currency' render={() => <SecondPage />} />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  // allCurrencies: state.currencyReducer.allCurrencies,\n})\n\nlet AppContainer = connect(mapStateToProps, { fetchCurrency })(App)\n\nconst MainApp = (props) => {\n  return (\n    <React.StrictMode>\n      <Router>\n        <Provider store={store}>\n          <AppContainer />\n        </Provider>\n      </Router>\n    </React.StrictMode>\n  )\n}\n\nexport default MainApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport reportWebVitals from './reportWebVitals'\nimport MainApp from './App'\n\nReactDOM.render(<MainApp />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}